# Auto-generated using compose2nix v0.3.2-pre.
{ pkgs, lib, config, ... }:

{
  # Runtime
  virtualisation.podman = {
    enable = true;
    autoPrune.enable = true;
    dockerCompat = true;
  };

  # Enable container name DNS for all Podman networks.
  networking.firewall.interfaces = let
    matchAll =
      if !config.networking.nftables.enable then "podman+" else "podman*";
  in { "${matchAll}".allowedUDPPorts = [ 53 ]; };

  virtualisation.oci-containers.backend = "podman";

  # Containers
  virtualisation.oci-containers.containers."ordercube-website-nginx" = {
    image = "docker.io/nginx:latest";

    volumes = [
      "/home/anon/src/orderlight/website/docker/nginx/hosts:/etc/nginx/conf.d:rw"
      "/home/anon/src/orderlight/website/logs/nginx:/var/log/nginx:rw"
      "/home/anon/src/orderlight/website/www:/var/www/app:rw"
    ];
    ports = [ "8080:8080/tcp" ];
    dependsOn = [ "ordercube-website-php" ];
    log-driver = "journald";
    extraOptions = [ "--network-alias=nginx" "--network=local_network" ];
  };
  systemd.services."podman-ordercube-website-nginx" = {
    serviceConfig = { Restart = lib.mkOverride 90 "always"; };
    partOf = [ "podman-compose-website-root.target" ];
    wantedBy = [ "podman-compose-website-root.target" ];
  };
  virtualisation.oci-containers.containers."ordercube-website-php" = {
    image = "docker.io/nginx:latest";
    volumes = [ "/home/anon/src/orderlight/website/www:/var/www/app:rw" ];
    log-driver = "journald";
    extraOptions = [ "--network-alias=php" "--network=local_network" ];
  };
  systemd.services."podman-ordercube-website-php" = {
    serviceConfig = { Restart = lib.mkOverride 90 "always"; };
    partOf = [ "podman-compose-website-root.target" ];
    wantedBy = [ "podman-compose-website-root.target" ];
  };

  # Builds
  systemd.services."podman-build-ordercube-website-nginx" = {
    path = [ pkgs.podman pkgs.git ];
    serviceConfig = {
      Type = "oneshot";
      TimeoutSec = 300;
    };
    script = ''
      cd /home/anon/src/orderlight/website/docker/nginx
      podman build -t compose2nix/ordercube-website-nginx .
    '';
  };
  systemd.services."podman-build-ordercube-website-php" = {
    path = [ pkgs.podman pkgs.git ];
    serviceConfig = {
      Type = "oneshot";
      TimeoutSec = 300;
    };
    script = ''
      cd /home/anon/src/orderlight/website/docker/php
      podman build -t compose2nix/ordercube-website-php .
    '';
  };

  # Root service
  # When started, this will automatically create all resources and start
  # the containers. When stopped, this will teardown all resources.
  systemd.targets."podman-compose-website-root" = {
    unitConfig = { Description = "Root target generated by compose2nix."; };
    wantedBy = [ "multi-user.target" ];
  };
}
